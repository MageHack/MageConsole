<?php
/**
 * @category    MageHack
 * @package     MageHack_MageConsole
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
?>
<?php $helper = Mage::helper('mageconsole'); ?>
<?php if ($helper->isEnabled()): ?>
<form method="post" action="" id="terminalForm">
    <input name="form_key" type="hidden" value="<?php echo $this->getFormKey() ?>" />
    <input name="request" type="hidden" value="" id="terminalCmd" />
</form>
<div id="terminal"></div>
<?php if ($helper->isIconEnabled()): ?>
<div id="terminal_icon" onclick="mc_toggle()"></div>
<?php endif; ?>
<style>
    .compl { background-color: #333; }
    .terminal hr { border: 1px solid #777; height: 1px; }
</style>
<script type="text/javascript">
    //<![CDATA[

    var mcterm = null;
    var mcwizard = null;
    var commandList = null;

    function show_clist(list) {
        mcterm.echo('<hr/><span class="compl">'+list.join('</span>\t<span  class="compl">')+'</span>',{raw:true});
    }

    function mc_disable() {
        if (mcterm) {
            mcterm.pause();
            mcterm.disable();
            jQuery('#terminal').hide();
        } else {
            console.log('exit');
        }
    }

	function mc_toggle(e,iconclick) {
		if (mcterm == null) {
			jQuery(function($, undefined) {
			mcwizard = new Array();
			mcterm = $('#terminal').terminal(function(cmd, term) {
				if (cmd !== '') {
					if (cmd == 'exit') { mc_disable(); return false; }
					term.pause();
					jQuery('#terminalCmd').val(cmd);
					try {
						$.ajax({
							type: "POST",
							data: $('#terminalForm').serialize(),
							dataType: 'json',
							url: "<?php echo $this->getSubmitUrl(); ?>"
						}).error(function (jqXHR, textStatus, errorThrown) {
							term.error(jqXHR.responseText);
						}).done(function (response) {
								if(response && response.status == 'OK') {
									switch (response.type)
									{
										case "MESSAGE":
											if( Object.prototype.toString.call(response.message) === '[object Array]' ) {
												for (var i = 0; i < response.message.length; i++) {
													term.echo(response.message[i] + '\n');
												}
											} else {
												term.echo(response.message);
											}
											break;
										case "REDIRECT":
											  jQuery('body').append('<iframe class="mc_download" style="display:none" src="<?php echo $this->getSubmitUrl(); ?>request/'+encodeURIComponent(response.message)+'"></iframe>');
											  jQuery('.mc_download').remove();
											break;
										case "LIST":
											break;
										case "PROMPT":
											var key = '';
											if(Object.keys(response.message).length == 0) break;
											mcwizard.mattrs = response.message;
											for (key in mcwizard.mattrs) break;
											var attrdata = mcwizard.mattrs[key];
											mcwizard.storedData  = new Object();
											mcwizard.actkey = key;
											mcwizard.formkey = response.id;
											delete mcwizard.mattrs[key];
											term.push(mc_prompt,{ prompt:'\t[[b;#eee;#000]'+attrdata['label']+':] ',name:key});
											break;
										case "ERROR":
											term.error(new String(response.message));
											break;
									}
								} else {
									term.error(new String(response.message));
								}
								term.resume();
							});
					} catch(e) {
						term.error(new String(e));
					}
				}
			}, {
				greetings: 'Magento Console v. 0.1.0',
				name: 'mageconsole',
				exit: false,
				height: 200,
				tabcompletion: true,
				onInit: function () {
					jQuery("html, body").animate({ scrollTop: jQuery(document).height() }, "slow");
                    $.ajax({
                        type: "POST",
                        data: $('#terminalForm').serialize(),
                        dataType: 'json',
                        url: "<?php echo $this->getInitUrl(); ?>"
                    }).error(function (jqXHR, textStatus, errorThrown) {
                            term.error(jqXHR.responseText);
                    }).done(function (response) {
                        if(response && response.status == 'OK') {
                            commandList = response.message;
/*                            mcterm.commands(response.message); */
                        }
                    });
				},
				prompt: '[[b;#fff;#000]Mage>] ',
                completion: function (term,str,callback) {
                    var command = mcterm.get_command();
                    // console.log(command);
                    if (command == '') {
                        show_clist(commandList);
                        return;
                    }
                    var clen = command.length;
                    var finishedWords = command.substring(0,command.lastIndexOf(' '));
                    var a = [];
                    var index, value;
                    for (index = 0; index < commandList.length; ++index) {
                        value = commandList[index];
                        if (value.substring(0, clen) === command && value != command) {
                            if (finishedWords)
                                a.push(value.substr(finishedWords.length+1));
                            else
                                a.push(value);
                        }
                    }
                    if (str && a.length) {
                        show_clist(a);
                        callback(a);
                    }
                },
				keydown: function (e) {
					if (e.which == 67 && e.ctrlKey) { // ctrl-c
						e.preventDefault();
						mcterm.set_command('');
						if (mcwizard.actkey) { mcterm.pop(); delete mcwizard.actkey; }
						return false;
					} else if (e.which == 68 && e.ctrlKey) { // ctrl-d
						e.preventDefault();
						if (mcwizard.actkey) mc_send();
						else {
							if (mcterm.get_command() == '') { mc_disable(); return false; }
						}
						return false;
					}
				}});
		    });
			return false;
		} else if (mcterm.css('display')=='none') {
			jQuery('#terminal').show();
			mcterm.enable();
			mcterm.resume();
			jQuery("html, body").animate({ scrollTop: jQuery(document).height() }, "slow");
			if (e) e.preventDefault();
			return false;
		} else {
			mc_disable();
			return false;
		}
	}

    jQuery(document).keypress(function (e) {
        if (!mcterm || mcterm.css('display')=='none') {
            if (e.which == 77 && (e.ctrlKey) && (e.shiftKey)) { // shift-ctrl-m
                e.preventDefault();
                mc_toggle();
                return false;
            }
        } else {
            mc_disable();
        }
    });

    function mc_send () {
        mcterm.pause();
        if (mcwizard.storedData.length < 1) { mcterm.pop(); mcterm.resume(); return false; }
        jQuery.ajax({
            type: "POST",
            data: {form_key: jQuery('#terminalForm input[name=form_key]').val(), id: mcwizard.formkey, data: mcwizard.storedData },
            dataType: 'json',
            url: "<?php echo $this->getPromptUrl(); ?>",
        }).done(function (response) {
                mcterm.echo(response.message);
                mcterm.pop();
                mcterm.resume();
            });
        delete mcwizard.actkey;
    }

    function mc_prompt (cmd) {
        var oldkey = mcwizard.actkey;
        mcwizard.storedData[oldkey] = cmd;

        if(Object.keys(mcwizard.mattrs).length == 0) {
            mc_send();
            return false;
        }
        var key = '';
        for (key in mcwizard.mattrs) break;
        var attrdata = mcwizard.mattrs[key];
        mcwizard.actkey = key;
        delete mcwizard.mattrs[key];
        mcterm.pop();
        if (attrdata['values'].length == 0)
            mcterm.push(mc_prompt,{ prompt:'\t[[b;#eee;#000]'+attrdata['label']+':] ',name: key});
        else {
            var vals = '';
            for (var i in attrdata['values']) {
                var item = attrdata['values'][i];
                if (item['value'] !== '' && item['value'] !== undefined && typeof item['value'] != 'array' && typeof item['value'] != 'object') {
                    if (vals.length) vals += ',';
                    vals += item['value']+':'+item['label'];
                }
            }
            mcterm.push(mc_prompt,{ prompt:'\t[[b;#eee;#000]'+attrdata['label']+'('+vals+'):] ',name: key});
        }
    }

    jQuery(document).ready(function() {
        var $dragging = null;
        var $originalY = 0;
        var $originalH = 0;

        jQuery(document.body).on("mousemove", function(e) {
            if ($dragging) {
                $dragging.css('height', $originalY - e.screenY + $originalH );
                jQuery("html, body").animate({ scrollTop: jQuery(document).height() }, "fast");
            }
        });

        jQuery(document.body).on("mousedown", "div", function (e) {
            if (e.target.id == 'terminal' && !$dragging) {
                jQuery(document.body).attr('unselectable','on').css('MozUserSelect','none');
                $originalY = e.screenY;
                $originalH = jQuery(e.target).height();
                $dragging = jQuery(e.target);
            }
        });

        jQuery(document.body).on("mouseup", function (e) {
        	if ($dragging) {
	            $dragging = null;
    	        jQuery(document.body).attr('unselectable','off').css('MozUserSelect','');
            }
        });
    });

    //]]>
</script>
<?php endif; ?>
